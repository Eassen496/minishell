faut des fonctions de la forme : void fonction(int fdout, (int fdin), char **motsdelaligne)

quand on a un pipe | , il faut utiliser la fonction pipe pour remplir un int pipe[2], pipe[0] sera l'entree fdin de la fonction 2, pipe[1] sera la sortie fdout de la fonction 1,
puis faut separer la ligne en fonction 1/fonction 2 qu'on executera separement l'une apres l'autre ou avec un fork

quand on a un > nomdufichier il faut faire fdout = open(nomdufichier, O_WRONLY) et virer > et nomdufichier de la ligne
quand on a un >> nomdufichier il faut faire fdout = open(nomdufichier, O_WRONLY|O_APPEND) et virer >> et nomdufichier de la ligne

quand on a un < nomdufichier il faut faire fdin = open(nomdufichier, O_RDONLY) et virer < et nomdufichier de la ligne

on commence par un fdin = dup(0) et fdout = dup(1)
quand fdin ou fdout changent, il faut faire un fdin/out = dup2(open(....), fdin/out)

l'exemple de la page man de pipe est vraiment bien avec du fork, du wait et du pipe

faut d'abord tout parser par mot, puis utiliser les pipe pour separer ca en differentes commandes, puis faire les > >> <, puis executer les commandes


ordre de parsing : interpreter les >, < et | pas entre "" et '', puis remplacer les $XXXX pas entre '' par leur valeur, puis faire des "mots" en enlevant les "" et ''

quand on tombe sur un > ou <, on lit et on interprette tout de suite le mot suivant



parsing
d'abord parser tous les token && | > >> < <<, si y en a 2 incompatibles a la suite erreur
token : && | > >> < << ou "mot" avec *pointeur
ensuite on reparcourt tous les token en scindant la commande selon les && | et compagnie, et en faisnt les redirection et ouverture de fichier tout ca
pour les ouvertures de fichier avec <, > et >> faut interpreter le token suivant comme un nom de fichier, il faut d'abord remplacer les $env dedans, puis verifier si y a des separateur pas entre "" dedans (auquel cas erreur ambigu), puis virer les ""
tous les token utilise sont "brules"
ensuite on remplace les $env dans les token restant, puis on les scinde en mot, puis on vire les ""
ensuite on execute les commande mot apres mot
